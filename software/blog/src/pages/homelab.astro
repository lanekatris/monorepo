---
import yaml from 'js-yaml'
import Layout from '../layouts/BlogPost.astro'
import { getFromMinio } from '../get-from-minio'
import { sql } from '../content.config'

interface DockerComposeFile {
	services: { [k: string]: { ports?: string[]
	image:string
	} }
}

const urls = [
	'https://raw.githubusercontent.com/lanekatris/monorepo/refs/heads/main/infrastructure/homelab/docker-compose.yml',
	'https://raw.githubusercontent.com/lanekatris/monorepo/refs/heads/main/infrastructure/homelab/docker-compose.miniflux.yml',
	'https://raw.githubusercontent.com/lanekatris/monorepo/refs/heads/main/infrastructure/homelab/docker-compose.n8n.yml',
	'https://raw.githubusercontent.com/lanekatris/monorepo/refs/heads/main/infrastructure/homelab/immich/docker-compose.yml',
	'https://raw.githubusercontent.com/lanekatris/monorepo/refs/heads/main/infrastructure/homelab/windmill/docker-compose.yml'
]

const files = await Promise.all(
	urls.map(async (url) => {
		const response = await fetch(url)
		const contents = await response.text()
		const json = (await yaml.load(contents)) as DockerComposeFile

		return {
			url,
			fileName: url.split('/').slice(-2).join('/'),
			fileContents: json
		}
	})
)

const machines = await Promise.all([
	getFromMinio<string>('etl', 'linux_desktop_screenfetch_result.txt', false),
	getFromMinio<string>('etl', 'server1_screenfetch_result.txt', false)
])

const eventCounts = await sql`select event_name,min(created_at)::date earliest_date, max(created_at)::date latest_date, count(*)::int count from events group by event_name order by count(*) desc`
---

<Layout title="My Homelab" pubDate={new Date('August 08 2021')}>
	<ol class="terminal-toc">
		{
				<li>
					<a href={`#dc`}>Docker Compose Files</a>
				</li>
			<li><a href="#mm">My Machines</a></li>
			<li><a href="#iot">My IoT Devices</a></li>
			<li><a href="#e">My Events</a></li>
		}
	</ol>

	<h1 id="dc">Docker Compose Files</h1>
	<p>
I suck		 in my homelab docker-compose files and creates easy links to navigate to them if
		they expose any ports.
	</p>
	{
		files.map((file) => (
			<div>
				<h3>
					<a target={'_blank'} href={file.url}>
						{file.fileName}
					</a>
				</h3>

				<table>
					<thead>
					<tr>
						<th>App</th>
						<th>Ports</th>
						<th>Links</th>
					</tr>
					</thead>
					<tbody>
					{Object.keys(file.fileContents.services)
						.filter((name) => file.fileContents.services[name].ports)
						.map((name) => (
							<tr>
								<td>{name} ({file.fileContents.services[name].image.split(':')[1] ?? <mark>No Tag</mark>})</td>
								<td>
									{file.fileContents.services[name].ports?.map((port) => (
										<div>{port}</div>
									))}
								</td>
								<td>

									{file.fileContents.services[name].ports?.map((port) => (
										<div>
										<a target={'_blank'} href={`http://server1.local:${port.split(':')[0]}`}>
												DNS
											</a>
											|
											<a target={'_blank'} href={`http://192.168.86.100:${port.split(':')[0]}`}>
												IP
											</a>
											<a target={'_blank'} href={`http://100.99.14.109:${port.split(':')[0]}`}>
												Tailscale
											</a>
										</div>
									))}
								</td>
							</tr>
						))}
					</tbody>
				</table>
			</div>
		))
	}

	<h1 id="mm">My Machines</h1>
	<p>
		I have a Temporal schedule that runs <code>screenfetch -N</code> every week that writes to Minio
		and this page requests the files from Minio and renders the results here.
	</p>
	<p>
		I didn&apos;t go with <code>neofetch</code> because of unicode characters.
	</p>
	{
		machines.map((serverInfo) => (
			<div>
				<small>Last Updated: {serverInfo.stats.lastModified.toLocaleDateString()}:</small>
				<pre>{serverInfo.data}</pre>
			</div>
		))
	}
					<h1 id="iot">My IoT Devices</h1>
					These are devices I've created. I'll think of how to show 3rd party in the future.
					<table>
					<thead><tr><td>Purpose</td><td>Device</td><td>Random</td></tr></thead>

					<tbody>
					<tr><td>Aquarium</td><td>Pi Pico W</td><td></td></tr>
					<tr><td>
						Kitchen Barcode Scanner
					</td><td>Pi Zero W 1.1</td><td></td></tr>
					<tr><td><a href="/blog/2024-12-15-control-panel">Control Panel</a></td><td>Pi Pico W</td><td></td></tr>
					<tr><td>Dog water level</td><td>ESP32 DevkitC 1.1</td><td>Battery powered</td></tr>
					</tbody>

					</table>
					<!--<ul>-->
					<!--	<li>Aquarium Pi Pico W</li>-->
					<!--	<li>Kitchen Barcode Scanner </li>-->
					<!--</ul>-->
					<h1 id="e">My Events</h1>
					I'll add more details about what is going on here in the future.
					<table><thead><tr><th>Name</th>
					<th>First Logged</th><th>Last Logged</th><th>Event Count</th></tr></thead>

					<tbody>
					{eventCounts.map((eventCount) => <tr>
						<td>
							{eventCount.event_name || 'Bad Data...'}
						</td>
						<td>{eventCount.earliest_date.toLocaleDateString()}</td>
						<td>{eventCount.latest_date.toLocaleDateString()}</td>
						<td>{eventCount.count.toLocaleString()}</td>
					</tr>)}
					</tbody></table>
</Layout>
