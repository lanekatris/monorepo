---
import { getCollection } from 'astro:content'
import Layout from '../layouts/BlogPost.astro'
import type { FEED_TYPE } from '../content.config'
import { getFileDownloadPath, isDev } from '../utils'
import path from 'path'
import fs from 'fs'

// Not sure why I have to sort here and it doesn't work from the collection
const rawFeed = await getCollection('feed')
const memos = await getCollection('memos')

const memosAsFeed: FEED_TYPE[] = memos.map((memo) => {
	const a: FEED_TYPE = {
		id: memo.id,
		type: 'memo',
		date: memo.data.date!,
		data: {
			memo: {
				html: memo.rendered?.html!
			}
		}
	}
	return a
})
const feed = rawFeed.map(x => x.data).concat(memosAsFeed)
feed.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())

const feedJsonFilename = 'feed.json'
fs.writeFileSync(path.join('public', feedJsonFilename), JSON.stringify(feed, null, 2))
---

<Layout title={`Feed (${feed.length})`} pubDate={new Date('August 08 2021')}>
	<p>This page is a one stop shop for my interesting events. TODO: Add blog posts.</p>
	<ul>
		<li>

			{isDev() &&
				<>
					<a href="http://server1.local:8055/namespaces/default/schedules/schedule_obsidian_files_to_db"
						 target="_blank">Sync
						.MD->SQL</a>
					<br>
				</>
			}
		</li>
		<li>

			<a href={getFileDownloadPath(feedJsonFilename)}>{feedJsonFilename}</a>
		</li>
		<li>

			<a href="/data">/data</a>
		</li>
	</ul>
	<details open>
		<summary>Entire Feed - {feed.length} entries</summary>
		<table>
			<thead>
			<tr>
				<th>Date</th>
				<th>Type</th>
				<th>Info</th>
			</tr>
			</thead>
			<tbody>
			{
				feed.map((post) => {
					if (post.type === 'memo') {
						return (
							<tr>
								<td>
									{post.date.toLocaleDateString('en-US', {
										year: 'numeric',
										month: '2-digit',
										day: '2-digit'
									})}
								</td>
								<td>Memo</td>
								<!--<td>{post.data.data.memo.html}</td>-->
								<td>

									<Fragment set:html={post.data.memo?.html} />
								</td>
							</tr>
						)
					}
					if (post.type === 'podcast-completed' && post.data.podcast) {
						return (
							<tr>
								<td>
									{post.date.toLocaleDateString('en-US', {
										year: 'numeric',
										month: '2-digit',
										day: '2-digit'
									})}
								</td>
								<td>Podcast Completed</td>
								<td>
									{post.data.podcast?.displayTitle}
									<br />
									<small>{post.data.podcast?.displayAuthor}</small>
								</td>
							</tr>
						)
					}
					if (post.type === 'scorecard' && post.data.scorecard) {
						return (
							<tr>
								<td>
									{post.date.toLocaleDateString('en-US', {
										year: 'numeric',
										month: '2-digit',
										day: '2-digit'
									})}
								</td>
								<td>Disc Golf Round</td>
								<td>
									{post.data.scorecard?.coursename} {post.data.scorecard['+/-']}
								</td>
							</tr>
						)
					}
					if (post.type === 'disc' && post.data.disc) {
						const { number, brand, model, plastic } = post.data.disc
						return (
							<tr>
								<td>
									{post.date.toLocaleDateString('en-US', {
										year: 'numeric',
										month: '2-digit',
										day: '2-digit'
									})}
								</td>
								<td>New Disc</td>
								<td>
									({number}) {brand} {plastic} {model}
								</td>
							</tr>
						)
					}


					if (post.type === 'lost-disc' && post.data.disc) {
						const { number, brand, model, plastic } = post.data.disc
						return (
							<tr>
								<td>
									{post.date.toLocaleDateString('en-US', {
										year: 'numeric',
										month: '2-digit',
										day: '2-digit'
									})}
								</td>
								<td style="color: var(--error-color)">Lost Disc</td>
								<td>
									({number}) {brand} {plastic} {model}
								</td>
							</tr>
						)
					}

					if (post.type === 'adventure' && post.data.adventure) {
						const { adventure_type } = post.data.adventure
						return (
							<tr>
								<td>
									{post.date.toLocaleDateString('en-US', {
										year: 'numeric',
										month: '2-digit',
										day: '2-digit'
									})}
								</td>
								<td>Activity</td>
								<td>{adventure_type}</td>
							</tr>
						)
					}

					return <b>unknown: {post.type}</b>
				})
			}
			</tbody>
		</table>
	</details>
</Layout>

<!--<ul>-->
<!--	{-->
<!--		feed.map((post) => (-->
<!--			<li>-->
<!--				(-->
<!--				{post.data.date.toLocaleDateString('en-US', {-->
<!--					year: 'numeric',-->
<!--					month: '2-digit',-->
<!--					day: '2-digit'-->
<!--				})}-->
<!--				) [Disc Golf Round] {post.data.data.scorecard?.coursename} {post.data.data.scorecard['+/-']}-->
<!--			</li>-->
<!--		))-->
<!--	}-->
<!--</ul>-->
